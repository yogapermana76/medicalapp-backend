// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      String   // e.g., 'patient', 'doctor'
  doctor    Doctor?  @relation("UserDoctor")
  chats     Chat[]
  orders    Order[]
  messages  Message[] @relation("UserMessageSender")
}

model Doctor {
  id             Int    @id @default(autoincrement())
  user_id         Int    @unique
  specialization String
  user           User   @relation(fields: [user_id], references: [id], name: "UserDoctor")
  chats          Chat[]
}

model Medicine {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       Float
  stock       Int
  order_items  OrderItem[]
}

model Chat {
  id        Int      @id @default(autoincrement())
  user_id    Int
  doctor_id  Int
  created_at DateTime @default(now())
  messages  Message[]

  user   User   @relation(fields: [user_id], references: [id])
  doctor Doctor @relation(fields: [doctor_id], references: [id])
}

model Message {
  id        Int      @id @default(autoincrement())
  chat_id    Int
  sender_id  Int
  message   String
  sent_at    DateTime @default(now())
  
  chat   Chat   @relation(fields: [chat_id], references: [id])
  sender User   @relation(fields: [sender_id], references: [id], name: "UserMessageSender")
}

model Order {
  id          Int         @id @default(autoincrement())
  user_id      Int
  total_amount Float
  status      String
  created_at   DateTime    @default(now())
  order_items  OrderItem[]

  user User @relation(fields: [user_id], references: [id])
}

model OrderItem {
  id         Int     @id @default(autoincrement())
  order_id    Int
  medicine_id Int
  quantity   Int
  price      Float

  order    Order    @relation(fields: [order_id], references: [id])
  medicine Medicine @relation(fields: [medicine_id], references: [id])
}
